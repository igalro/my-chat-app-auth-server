let express,asyncHandler,Proxy,config,registerUser;_45f‍.x([["default",()=>_45f‍.o]]);_45f‍.w("express",[["default",["express"],function(v){express=v}]]);_45f‍.w("../ErrorHandler",[["asyncHandler",["asyncHandler"],function(v){asyncHandler=v}]]);_45f‍.w("express-http-proxy",[["default",["Proxy"],function(v){Proxy=v}]]);_45f‍.w("config",[["default",["config"],function(v){config=v}]]);_45f‍.w("../../lib/Auth/service",[["registerUser",["registerUser"],function(v){registerUser=v}]]);





const {authenticationServiceUrl} = config;
const auth = express.Router();

auth.get('/', asyncHandler(async (req, res) => {
    res.json(res.locals);
}));

auth.use('/login/user', Proxy(authenticationServiceUrl, {
    proxyReqPathResolver: req => '/login/user'
}));

auth.post('/register/user', asyncHandler(async (req, res) => {
    const data = req.body;
    const response = await registerUser({...data, company: data.userId});
    return res.send(response);
}))

_45f‍.d(auth);
