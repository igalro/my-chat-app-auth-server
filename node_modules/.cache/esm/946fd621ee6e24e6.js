let _,nonSecurePaths,nonSecureRegex,secureAndUnsecurePaths,validateToken;_ee6‍.x([["userValidationMiddleware",()=>userValidationMiddleware]]);_ee6‍.w("underscore",[["default",["_"],function(v){_=v}]]);_ee6‍.w("./consts",[["nonSecurePaths",["nonSecurePaths"],function(v){nonSecurePaths=v}],["nonSecureRegex",["nonSecureRegex"],function(v){nonSecureRegex=v}],["secureAndUnsecurePaths",["secureAndUnsecurePaths"],function(v){secureAndUnsecurePaths=v}]]);_ee6‍.w("../../api/authenticationService/login",[["validateToken",["validateToken"],function(v){validateToken=v}]]);



       async function userValidationMiddleware(req, res, next) {
    try{
        const token = req.headers['authorization'];
        if ( _.contains(nonSecurePaths, req.path) ||
            (nonSecureRegex.find(r => r.test(req.path))) ||
            (_.contains(secureAndUnsecurePaths, req.path) && token === undefined)) return next();
        const response = await validateToken(token);
        res.locals.userId = response.userId;
        next()
    }
    catch (e) {
        res.status(401).send('Unauthorized')
    }
}
